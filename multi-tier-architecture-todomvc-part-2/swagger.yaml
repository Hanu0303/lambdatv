swagger: '2.0'
info:
  version: '1.0.0'
  title: "multi-tier"
  description: A TodoMVC api
  contact:
    name: Jeshan G. BABOOA
    email: foo@example.com
    url: https://lambdatv.com
  license:
    name: BSD
    url: https://opensource.org/licenses/bsd-2-clause
host: "mw7cji0clf.execute-api.eu-west-1.amazonaws.com"
basePath: /api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      description: Returns all todos
      operationId: findTodos
      responses:
        '200':
          description: todos response
          schema:
            type: array
            items:
              $ref: '#/definitions/todo'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new todo in the store.  Duplicates are allowed
      operationId: addTodo
      parameters:
        - name: todo
          in: body
          description: Todo to add to the database
          required: true
          schema:
            $ref: '#/definitions/newTodo'
      responses:
        '200':
          description: todo response
          schema:
            $ref: '#/definitions/todo'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /{id}:
    get:
      description: Returns a todo based on a single ID
      operationId: findTodoById
      parameters:
        - name: id
          in: path
          description: ID of todo to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: todo response
          schema:
            $ref: '#/definitions/todo'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single todo based on the ID supplied
      operationId: deleteTodo
      parameters:
        - name: id
          in: path
          description: ID of todo to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: todo deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  todo:
    type: object
    required:
      - id
      - title
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      completed:
        type: boolean
  newTodo:
    type: object
    required:
      - title
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      completed:
        type: boolean
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
